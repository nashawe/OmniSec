# backend/simulation/objects/vulnerability.py

from dataclasses import dataclass, field, asdict
from enum import Enum, auto

class PatchStatus(Enum):
    UNPATCHED = auto()
    PATCHED = auto()
    MITIGATION_APPLIED = auto()

@dataclass
class Vulnerability:
    """Represents a weakness on a node or service."""
    cve_id: str  # e.g., "CVE-2023-1234"
    service_id: str | None  # Which service it affects, or None if general
    exploitability: float  # 0.0-1.0, higher is easier to exploit
    severity: float  # 0.0-1.0, higher is more impactful
    
    # Mutable state attributes
    patch_status: PatchStatus = PatchStatus.UNPATCHED
    known_to_blue: bool = False

    def to_dict(self):
        """Converts the dataclass to a dictionary, handling Enum types."""
        d = asdict(self)
        d['patch_status'] = self.patch_status.name
        return d